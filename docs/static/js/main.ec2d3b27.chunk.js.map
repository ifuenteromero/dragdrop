{"version":3,"sources":["components/DragNDrop.js","App.js","index.js"],"names":["DragNDrop","data","useState","list","setList","isDragging","setIsDragging","draggedItem","useRef","draggedNode","handleDragEnd","current","removeEventListener","getStyles","params","currentDraggedItem","groupI","itemI","handleDragEnter","e","target","oldList","newList","items","splice","className","map","group","onDragEnter","length","title","item","draggable","onDragStart","addEventListener","setTimeout","handleDragStart","App","ReactDOM","render","document","getElementById"],"mappings":"oNAwEeA,EArEG,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EACJC,mBAASD,GADL,mBACrBE,EADqB,KACfC,EADe,OAEQF,oBAAS,GAFjB,mBAErBG,EAFqB,KAETC,EAFS,KAItBC,EAAcC,mBACdC,EAAcD,mBAWdE,EAAgB,SAAhBA,IACJJ,GAAc,GACdC,EAAYI,QAAU,KACtBF,EAAYE,QAAQC,oBAAoB,UAAUF,GAClDD,EAAYE,QAAU,MAGlBE,EAAY,SAACC,GACjB,IAAMC,EAAqBR,EAAYI,QACvC,OAAGI,EAAmBC,SAAWF,EAAOE,QAAUD,EAAmBE,QAAUH,EAAOG,MAAc,mBAC7F,YAGHC,EAAkB,SAACC,EAAGL,GAC1B,IAAMC,EAAqBR,EAAYI,QACpCQ,EAAEC,SAAWX,EAAYE,SAC1BP,GAAQ,SAAAiB,GACN,IAAMC,EAAO,YAAOD,GAGpB,OAFAC,EAAQR,EAAOE,QAAQO,MAAMC,OAAOV,EAAOG,MAAO,EAAGK,EAAQP,EAAmBC,QAAQO,MAAMC,OAAOT,EAAmBE,MAAM,GAAG,IACjIV,EAAYI,QAAUG,EACfQ,MAKb,OACE,qBAAKG,UAAU,cAAf,SACGtB,EAAKuB,KAAI,SAACC,EAAOX,GAAR,OACR,sBAEES,UAAU,YACVG,YAAcD,EAAMJ,MAAMM,OAAuD,KAA9C,SAACV,GAAD,OAAOD,EAAgBC,EAAG,CAACH,SAAOC,MAAO,KAH9E,UAKE,qBAAKQ,UAAU,cAAf,SAA8BE,EAAMG,QACnCH,EAAMJ,MAAMG,KAAI,SAACK,EAAMd,GAAP,OACf,qBAEEQ,UAAWpB,EAAaQ,EAAU,CAACG,SAAOC,UAAU,WACpDe,WAAS,EACTC,YAAa,SAACd,GAAD,OAhDD,SAACA,EAAGL,GAC1BP,EAAYI,QAAUG,EACtBL,EAAYE,QAAUQ,EAAEC,OACxBX,EAAYE,QAAQuB,iBAAiB,UAAUxB,GAC/CyB,YAAW,WACT7B,GAAc,KACd,GA0C4B8B,CAAgBjB,EAAE,CAACH,SAAOC,WAC9CW,YAAa,SAACT,GAAD,OAAOD,EAAgBC,EAAE,CAACH,SAAOC,WALhD,SAOE,8BACE,2CAAYc,QAPTd,QAPJD,SC/BAqB,EAdH,WAKV,OACE,qBAAKZ,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,CAAWxB,KAPJ,CACX,CAAE6B,MAAO,UAAWP,MAAO,CAAC,EAAG,EAAG,IAClC,CAAEO,MAAO,UAAWP,MAAO,CAAC,EAAG,YCDnCe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ec2d3b27.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */ \r\nimport { useState, useRef } from \"react\";\r\n\r\nconst DragNDrop = ({data}) => {\r\n  const [list, setList] = useState(data);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const draggedItem = useRef();\r\n  const draggedNode = useRef();\r\n\r\n  const handleDragStart = (e, params) => {\r\n    draggedItem.current = params;\r\n    draggedNode.current = e.target;\r\n    draggedNode.current.addEventListener('dragend',handleDragEnd);\r\n    setTimeout(() => {\r\n      setIsDragging(true);\r\n    },0);\r\n  }\r\n\r\n  const handleDragEnd = () => {\r\n    setIsDragging(false);\r\n    draggedItem.current = null;\r\n    draggedNode.current.removeEventListener('dragend',handleDragEnd);\r\n    draggedNode.current = null;\r\n  }\r\n\r\n  const getStyles = (params) => {\r\n    const currentDraggedItem = draggedItem.current;\r\n    if(currentDraggedItem.groupI === params.groupI && currentDraggedItem.itemI === params.itemI) return 'dragged dnd-item'\r\n    return 'dnd-item'\r\n  }\r\n\r\n  const handleDragEnter = (e, params) => {\r\n    const currentDraggedItem = draggedItem.current;\r\n    if(e.target !== draggedNode.current){\r\n      setList(oldList => {\r\n        const newList = [...oldList];\r\n        newList[params.groupI].items.splice(params.itemI, 0, newList[currentDraggedItem.groupI].items.splice(currentDraggedItem.itemI,1)[0])\r\n        draggedItem.current = params;\r\n        return newList;\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"drag-n-drop\">\r\n      {list.map((group, groupI) => (\r\n        <div \r\n          key={groupI} \r\n          className=\"dnd-group\"\r\n          onDragEnter={!group.items.length ? (e) => handleDragEnter(e, {groupI,itemI: 0}) :null}\r\n        >\r\n          <div className=\"group-title\">{group.title}</div>\r\n          {group.items.map((item, itemI) => (\r\n            <div \r\n              key={itemI} \r\n              className={isDragging ? getStyles({groupI,itemI}) : \"dnd-item\" }\r\n              draggable \r\n              onDragStart={(e) => handleDragStart(e,{groupI,itemI})}\r\n              onDragEnter={(e) => handleDragEnter(e,{groupI,itemI})}\r\n            >\r\n              <div>\r\n                <p>{`ITEM ${item}`}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragNDrop;\r\n","import \"./App.css\";\nimport DragNDrop from \"./components/DragNDrop\";\n\nconst App = () => {\n  const data = [\n    { title: \"Group 1\", items: [1, 2, 3] },\n    { title: \"Group 2\", items: [4, 5] },\n  ];\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DragNDrop data={data} />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}